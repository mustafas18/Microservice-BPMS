// <auto-generated />
using System;
using FormMakerApi.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FormMaker.Migrations
{
    [DbContext(typeof(FormDbContext))]
    partial class FormDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FormMaker.Entities.FormComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FormTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<bool>("Readonly")
                        .HasColumnType("bit");

                    b.Property<string>("Tooltip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormTemplateId");

                    b.ToTable("FormComponents");
                });

            modelBuilder.Entity("FormMakerApi.Entities.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Assignees")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BpmId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("NodeId")
                        .HasColumnType("int");

                    b.Property<int>("PriorityStatus")
                        .HasColumnType("int");

                    b.Property<int>("TemplateId")
                        .HasColumnType("int");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("FormMakerApi.Entities.FormData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AssigneeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DoneDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("FormTemplateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormDatas");
                });

            modelBuilder.Entity("FormMakerApi.Entities.FormTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FormTemplates");
                });

            modelBuilder.Entity("FormMaker.Entities.FormComponent", b =>
                {
                    b.HasOne("FormMakerApi.Entities.FormTemplate", null)
                        .WithMany("Components")
                        .HasForeignKey("FormTemplateId");

                    b.OwnsOne("FormMaker.Entities.ComponentValue", "InputValue", b1 =>
                        {
                            b1.Property<int>("FormComponentId")
                                .HasColumnType("int");

                            b1.Property<int>("ComponentId")
                                .HasColumnType("int");

                            b1.Property<string>("Label")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Value")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("FormComponentId");

                            b1.ToTable("FormComponents");

                            b1.ToJson("InputValue");

                            b1.WithOwner()
                                .HasForeignKey("FormComponentId");
                        });

                    b.OwnsOne("System.Collections.Generic.List<FormMaker.Entities.ComponentValue>", "Values", b1 =>
                        {
                            b1.Property<int>("FormComponentId")
                                .HasColumnType("int");

                            b1.Property<int>("Capacity")
                                .HasColumnType("int");

                            b1.HasKey("FormComponentId");

                            b1.ToTable("FormComponents");

                            b1.ToJson("Values");

                            b1.WithOwner()
                                .HasForeignKey("FormComponentId");
                        });

                    b.Navigation("InputValue");

                    b.Navigation("Values");
                });

            modelBuilder.Entity("FormMakerApi.Entities.Form", b =>
                {
                    b.HasOne("FormMakerApi.Entities.FormTemplate", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("FormMakerApi.Entities.FormData", b =>
                {
                    b.OwnsOne("System.Collections.Generic.List<FormMakerApi.Entities.ComponentData>", "ComponentDatas", b1 =>
                        {
                            b1.Property<int>("FormDataId")
                                .HasColumnType("int");

                            b1.Property<int>("Capacity")
                                .HasColumnType("int");

                            b1.HasKey("FormDataId");

                            b1.ToTable("FormDatas");

                            b1.ToJson("ComponentDatas");

                            b1.WithOwner()
                                .HasForeignKey("FormDataId");
                        });

                    b.Navigation("ComponentDatas")
                        .IsRequired();
                });

            modelBuilder.Entity("FormMakerApi.Entities.FormTemplate", b =>
                {
                    b.Navigation("Components");
                });
#pragma warning restore 612, 618
        }
    }
}
